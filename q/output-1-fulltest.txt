Setup...
Setup complete.
Parsing... 
Parsing succeeded.
Running type checker... 
Type checker succeeded.
Dumping AST...
Module variables:
|  x : bool
|  y : long
Module functions:
|  increment : short definition
|  |  Parameters:
|  |  |  number : short
|  |  Statements:
|  |  |  Expression statement:
|  |  |  |  Decrement expression:
|  |  |  |  |  L-Value: number
|  |  |  Expression statement:
|  |  |  |  Increment expression:
|  |  |  |  |  L-Value: number
|  |  |  Assignment statement:
|  |  |  |  L-Value: number
|  |  |  |  Expression:
|  |  |  |  |  Binary + expression:
|  |  |  |  |  |  Left expression:
|  |  |  |  |  |  |  Binary - expression:
|  |  |  |  |  |  |  |  Left expression:
|  |  |  |  |  |  |  |  |  Type Conversion (into short):
|  |  |  |  |  |  |  |  |  |  Constant: 1 : byte
|  |  |  |  |  |  |  |  Right expression:
|  |  |  |  |  |  |  |  |  L-Value: number
|  |  |  |  |  |  Right expression:
|  |  |  |  |  |  |  Type Conversion (into short):
|  |  |  |  |  |  |  |  Constant: 2 : byte
|  |  Return expression:
|  |  |  L-Value: number
|  sum : long definition
|  |  Parameters:
|  |  |  in : long[100]
|  |  |  size : byte
|  |  Local variables:
|  |  |  total : long
|  |  |  j : byte
|  |  Statements:
|  |  |  Assignment statement:
|  |  |  |  L-Value: j
|  |  |  |  Expression:
|  |  |  |  |  Constant: 0 : byte
|  |  |  Loop statement:
|  |  |  |  Expression:
|  |  |  |  |  Binary < expression:
|  |  |  |  |  |  Left expression:
|  |  |  |  |  |  |  L-Value: j
|  |  |  |  |  |  Right expression:
|  |  |  |  |  |  |  L-Value: size
|  |  |  |  Statements:
|  |  |  |  |  Assignment statement:
|  |  |  |  |  |  L-Value: total
|  |  |  |  |  |  Expression:
|  |  |  |  |  |  |  Binary + expression:
|  |  |  |  |  |  |  |  Left expression:
|  |  |  |  |  |  |  |  |  L-Value: total
|  |  |  |  |  |  |  |  Right expression:
|  |  |  |  |  |  |  |  |  L-Value: in
|  |  |  |  |  |  |  |  |  |  Index:
|  |  |  |  |  |  |  |  |  |  |  Increment expression:
|  |  |  |  |  |  |  |  |  |  |  |  L-Value: j
|  |  Return expression:
|  |  |  L-Value: total
|  addthree : long definition
|  |  Parameters:
|  |  |  n1 : long
|  |  |  n2 : long
|  |  |  n3 : long
|  |  Local variables:
|  |  |  arr : long[100]
|  |  Statements:
|  |  |  Assignment statement:
|  |  |  |  L-Value: arr
|  |  |  |  |  Index:
|  |  |  |  |  |  Constant: 0 : byte
|  |  |  |  Expression:
|  |  |  |  |  L-Value: n1
|  |  |  Assignment statement:
|  |  |  |  L-Value: arr
|  |  |  |  |  Index:
|  |  |  |  |  |  Constant: 1 : byte
|  |  |  |  Expression:
|  |  |  |  |  L-Value: n2
|  |  |  Assignment statement:
|  |  |  |  L-Value: arr
|  |  |  |  |  Index:
|  |  |  |  |  |  Constant: 2 : byte
|  |  |  |  Expression:
|  |  |  |  |  L-Value: n3
|  |  Return expression:
|  |  |  Function call to sum:
|  |  |  |  Parameters:
|  |  |  |  |  L-Value: arr
|  |  |  |  |  Constant: 3 : byte
|  thethree : long definition
|  |  Return expression:
|  |  |  Function call to addthree:
|  |  |  |  Parameters:
|  |  |  |  |  Type Conversion (into long):
|  |  |  |  |  |  Constant: 111 : byte
|  |  |  |  |  Type Conversion (into long):
|  |  |  |  |  |  Constant: 2222 : short
|  |  |  |  |  Constant: 331000 : long
|  negate : long definition
|  |  Parameters:
|  |  |  input : long
|  |  Return expression:
|  |  |  Unary neg expression:
|  |  |  |  L-Value: input
|  position : long definition
|  |  Parameters:
|  |  |  needle : short
|  |  |  haystack : short[10]
|  |  Local variables:
|  |  |  i : short
|  |  |  found : bool
|  |  Statements:
|  |  |  Assignment statement:
|  |  |  |  L-Value: i
|  |  |  |  Expression:
|  |  |  |  |  Type Conversion (into short):
|  |  |  |  |  |  Constant: 0 : byte
|  |  |  Assignment statement:
|  |  |  |  L-Value: found
|  |  |  |  Expression:
|  |  |  |  |  Constant: 1 : bool
|  |  |  Loop statement:
|  |  |  |  Expression:
|  |  |  |  |  Binary and expression:
|  |  |  |  |  |  Left expression:
|  |  |  |  |  |  |  Binary < expression:
|  |  |  |  |  |  |  |  Left expression:
|  |  |  |  |  |  |  |  |  L-Value: i
|  |  |  |  |  |  |  |  Right expression:
|  |  |  |  |  |  |  |  |  Type Conversion (into short):
|  |  |  |  |  |  |  |  |  |  Constant: 10 : byte
|  |  |  |  |  |  Right expression:
|  |  |  |  |  |  |  Binary = expression:
|  |  |  |  |  |  |  |  Left expression:
|  |  |  |  |  |  |  |  |  L-Value: found
|  |  |  |  |  |  |  |  Right expression:
|  |  |  |  |  |  |  |  |  Constant: 1 : bool
|  |  |  |  Statements:
|  |  |  |  |  Conditional statement:
|  |  |  |  |  |  Expression:
|  |  |  |  |  |  |  Binary = expression:
|  |  |  |  |  |  |  |  Left expression:
|  |  |  |  |  |  |  |  |  L-Value: haystack
|  |  |  |  |  |  |  |  |  |  Index:
|  |  |  |  |  |  |  |  |  |  |  L-Value: i
|  |  |  |  |  |  |  |  Right expression:
|  |  |  |  |  |  |  |  |  L-Value: needle
|  |  |  |  |  |  Then statements:
|  |  |  |  |  |  |  Assignment statement:
|  |  |  |  |  |  |  |  L-Value: found
|  |  |  |  |  |  |  |  Expression:
|  |  |  |  |  |  |  |  |  Unary not expression:
|  |  |  |  |  |  |  |  |  |  Constant: 1 : bool
|  |  |  |  |  |  Else statements:
|  |  |  |  |  |  |  Assignment statement:
|  |  |  |  |  |  |  |  L-Value: i
|  |  |  |  |  |  |  |  Expression:
|  |  |  |  |  |  |  |  |  Function call to increment:
|  |  |  |  |  |  |  |  |  |  Parameters:
|  |  |  |  |  |  |  |  |  |  |  L-Value: i
|  |  Return expression:
|  |  |  Unary neg expression:
|  |  |  |  Function call to negate:
|  |  |  |  |  Parameters:
|  |  |  |  |  |  Type Conversion (into long):
|  |  |  |  |  |  |  L-Value: i
|  andtest : short definition
|  |  Parameters:
|  |  |  something : byte
|  |  Return expression:
|  |  |  Type Conversion (into short):
|  |  |  |  L-Value: something
AST dumped.
